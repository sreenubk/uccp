package com.lotus.uccp.authentication.model;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.lotus.uccp.util.Constant;

/**
 * AuthorizationGroup generated by hbm2java
 */
@Entity
@Table(name = "authorizationgroup", schema = Constant.SCHEMA )
public class AuthorizationGroup implements java.io.Serializable {

	private BigDecimal authorizationgroupid;
	private ControlGroup controlGroup;
	private OrganizationUnit organizationUnit;
	private SecurityRole securityRole;
	private Users users;
	//private BigDecimal jobid1;
	private String jobName;
	

	private String createdby;
	private Date createdon;
	private String lastupdatedby;
	private Date lastupdatedon;
	private String authGroupName;
	private Set<AuthorizationPolicy> authorizationPolicy = new HashSet<AuthorizationPolicy>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorizationGroup")
	public Set<AuthorizationPolicy> getAuthorizationPolicy() {
		return authorizationPolicy;
	}

	public void setAuthorizationPolicy(Set<AuthorizationPolicy> authorizationPolicy) {
		this.authorizationPolicy = authorizationPolicy;
	}

	public AuthorizationGroup() {
	}

	public AuthorizationGroup(BigDecimal authorizationgroupid, ControlGroup controlGroup) {
		this.authorizationgroupid = authorizationgroupid;
		this.controlGroup = controlGroup;
	}

	public AuthorizationGroup(BigDecimal authorizationgroupid, ControlGroup controlGroup,
			OrganizationUnit organizationUnit, SecurityRole securityRole, Users users, String jobName,
			String createdby, Date createdon, String lastupdatedby, Date lastupdatedon,String authGrpName , Set<AuthorizationPolicy> authorizationPolicy) {
		this.authorizationgroupid = authorizationgroupid;
		this.controlGroup = controlGroup;
		this.organizationUnit = organizationUnit;
		this.securityRole = securityRole;
		this.users = users;
		this.jobName = jobName;
		this.createdby = createdby;
		this.createdon = createdon;
		this.lastupdatedby = lastupdatedby;
		this.lastupdatedon = lastupdatedon;
		this.authorizationPolicy = authorizationPolicy ;
		this.authGroupName = authGrpName ;
	}

	@Id
	@SequenceGenerator(schema = Constant.SCHEMA ,name  = "AuthGrpSeq", sequenceName = "AuthGrpSeq", allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="AuthGrpSeq")
	@Column(name = "authorizationgroupid", unique = true, nullable = false, scale = 0)
	public BigDecimal getAuthorizationgroupid() {
		return this.authorizationgroupid;
	}

	public void setAuthorizationgroupid(BigDecimal authorizationgroupid) {
		this.authorizationgroupid = authorizationgroupid;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "controlgroupid", nullable = false)
	public ControlGroup getControlGroup() {
		return this.controlGroup;
	}

	public void setControlGroup(ControlGroup controlGroup) {
		this.controlGroup = controlGroup;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "organizationUnitid")
	public OrganizationUnit getOrganizationUnit() {
		return this.organizationUnit;
	}

	public void setOrganizationUnit(OrganizationUnit organizationUnit) {
		this.organizationUnit = organizationUnit;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "rolename")
	public SecurityRole getSecurityRole() {
		return this.securityRole;
	}

	public void setSecurityRole(SecurityRole securityRole) {
		this.securityRole = securityRole;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "username")
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	/*@Column(name = "jobid", scale = 0)
	public BigDecimal getJobid() {
		return this.jobid;
	}

	public void setJobid(BigDecimal jobid) {
		this.jobid = jobid;
	}
*/
	@Column(name = "createdby", length = 64)
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "createdon", length = 13)
	public Date getCreatedon() {
		return this.createdon;
	}

	public void setCreatedon(Date createdon) {
		this.createdon = createdon;
	}

	@Column(name = "lastupdatedby", length = 64)
	public String getLastupdatedby() {
		return this.lastupdatedby;
	}

	public void setLastupdatedby(String lastupdatedby) {
		this.lastupdatedby = lastupdatedby;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "lastupdatedon", length = 13)
	public Date getLastupdatedon() {
		return this.lastupdatedon;
	}

	public void setLastupdatedon(Date lastupdatedon) {
		this.lastupdatedon = lastupdatedon;
	}
    
	@Column(name = "authgroupname", length = 64)
	public String getAuthGroupName() {
		return authGroupName;
	}

	public void setAuthGroupName(String authGroupName) {
		this.authGroupName = authGroupName;
	}
	
	@Column(name = "jobname", length = 50)
	public String getJobName() {
		return jobName;
	}

	public void setJobName(String jobName) {
		this.jobName = jobName;
	}
}

